---
# Copyright (c) 2019 Cisco and/or its affiliates.
#
# This software is licensed to you under the terms of the Cisco Sample
# Code License, Version 1.1 (the "License"). You may obtain a copy of the
# License at
#
#               https://developer.cisco.com/docs/licenses
#
# All use of the material herein must be in accordance with the terms of
# the License. All rights not expressly granted by the License are
# reserved. Unless required by applicable law or agreed to separately in
# writing, software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.

- name: Modify Cluster
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - name: parse csv and make vars file
    command: "python parse_csv.py cluster.csv"


- name: Scale Up New Cluster and Apps
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    scaleup: 2

  tasks:
  - name: Load Password
    include_vars: vars/password.yml
  - name: Load Variables
    include_vars:
      file: cluster.csv.yml
      name: input




  - name: Get Token
    shell: "curl -i -k -X POST --header 'Content-Type: application/x-www-form-urlencoded' --header 'Accept: application/json' -d 'username={{username}}&password={{password}}' 'https://{{inventory_hostname}}/2/system/login'"
    register: token
  - name: Print TOKEN
    debug:
      msg:
        - "{{token.stdout_lines[6].split()[1]}}"

  - name: Get Cluster ID
    uri:
        url: "https://{{inventory_hostname}}/2/clusters"
        method: GET
        headers:
          Content-Type: "application/json"
          x-auth-token: "{{token.stdout_lines[6].split()[1]}}"
        return_content: yes
        validate_certs: no
        status_code: 200, -1
    # And don't validate the server cert as it's self-signed for non-prod.
    register: response
    loop: "{{ input.raw_data }}"


  - name: Node Pool
    uri:
        url: "https://{{inventory_hostname}}/2/clusters/{{item.name}}"
        method: GET
        headers:
          Content-Type: "application/json"
          x-auth-token: "{{token.stdout_lines[6].split()[1]}}"
        return_content: yes
        validate_certs: no
        status_code: 200, -1
    # And don't validate the server cert as it's self-signed for non-prod.
    register: node
    loop: "{{ input.raw_data }}"

  - name: print node pool
    debug:
      msg:
        - "{{node.results[0].json.nodes[1].node_pool_id}}"



  - name: Scale Up Cluster
    uri:
        url: "https://{{inventory_hostname}}/2/clusters/{{response.results[0].json[1].uuid}}/nodepools/{{node.results[0].json.nodes[1].node_pool_id}}"
        method: PATCH
        body:
          {
          "size": "{{scaleup}}"
          }
        body_format: json
        headers:
          Content-Type: "application/json"
          x-auth-token: "{{token.stdout_lines[6].split()[1]}}"
        return_content: yes
        validate_certs: no
        status_code: 200, 204, -1
        # And don't validate the server cert as it's self-signed for non-prod.
    register: scaleup
    loop: "{{ input.raw_data }}"

  - name: pause
    pause:
      minutes: 1
